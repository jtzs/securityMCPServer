# Build stage
FROM denoland/deno:latest AS builder
WORKDIR /app
COPY . .
RUN deno cache main.ts

FROM kalilinux/kali-last-release

# Install required system dependencies for security tools
RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    curl \
    nmap \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set up tools directory
RUN mkdir -p /tools
ENV PATH="/tools:${PATH}"

# Install TLSX
RUN wget -q https://github.com/projectdiscovery/tlsx/releases/download/v1.1.2/tlsx_1.1.2_linux_amd64.zip && \
    unzip -o tlsx_1.1.2_linux_amd64.zip -d /tools && \
    rm tlsx_1.1.2_linux_amd64.zip && \
    chmod +x /tools/tlsx

# Install Amass
RUN wget -q https://github.com/OWASP/Amass/releases/download/v3.23.3/amass_Linux_amd64.zip && \
    unzip -o amass_Linux_amd64.zip -d /tmp && \
    mv /tmp/amass_Linux_amd64/amass /tools/ && \
    rm -rf /tmp/amass_Linux_amd64 amass_Linux_amd64.zip && \
    chmod +x /tools/amass

# Install Hashcat
RUN wget -q https://hashcat.net/files/hashcat-6.2.6.7z && \
    7z x hashcat-6.2.6.7z && \
    mv hashcat-6.2.6 /tools/hashcat && \
    rm hashcat-6.2.6.7z && \
    chmod +x /tools/hashcat/hashcat.bin

# Copy project files
WORKDIR /app
COPY --from=builder /app .

# Specify required permissions explicitly
CMD ["deno", "run", "--allow-net","--allow-env", "--allow-read", "--allow-run", "main.ts", "http"]
